apply plugin: 'com.android.application'

def build_ndk    = "NDK"
def build_cmake  = "CMAKE"
def build_method = build_cmake

android {
    compileSdkVersion 28
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "com.dark.force"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        if (build_method == build_cmake) {
            externalNativeBuild {
                cmake {
                    arguments "-DANDROID_NATIVE_API_LEVEL=" + String.valueOf(minSdkVersion)
                    arguments "-DANDROID_LD=lld"
                    arguments "-DANDROID_STL=c++_shared"
                }
            }
        }
        ndk {
            abiFilters 'armeabi-v7a', 'x86'
        }

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        if (build_method == build_cmake) {
            cmake {
                path "src/main/cpp/CMakeLists.txt"
                version "3.10.2"
            }
        }
        else if (build_method == build_ndk) {
            ndkBuild {
                path file('src/main/cpp/Android.mk')
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
